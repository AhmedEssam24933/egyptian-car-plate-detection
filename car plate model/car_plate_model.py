# -*- coding: utf-8 -*-
"""car plate model.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qg_wIaKDNsLCEh-XrHWTHUJJ18xGfEWi
"""

# Commented out IPython magic to ensure Python compatibility.
#clone YOLOv5 and
!git clone https://github.com/ultralytics/yolov5  # clone repo
# %cd yolov5
# %pip install -qr requirements.txt # install dependencies
# %pip install -q roboflow

import torch
import os
from IPython.display import Image, clear_output  # to display images

print(f"Setup complete. Using torch {torch.__version__} ({torch.cuda.get_device_properties(0).name if torch.cuda.is_available() else 'CPU'})")

!pip install roboflow

from roboflow import Roboflow
rf = Roboflow(api_key="XRcZB4HVUZw2RzVGB0EV")
project = rf.workspace("ahmad-essam-gvgib").project("car-plate-detection-dc1vu")
dataset = project.version(1).download("yolov5")

os.environ["DATASET_DIRECTORY"] = "/content/dataset"

!python train.py --img 416 --batch 16 --epochs 100 --data {dataset.location}/data.yaml --weights yolov5s.pt --cache

!python detect.py --weights runs/train/exp/weights/best.pt --img 416 --conf 0.5 --source /content/test

!python detect.py --weights runs/train/exp/weights/best.pt --img 416 --conf 0.5 --source /content/videos

import torch

model = torch.hub.load('.', 'custom', path='/content/yolov5/runs/train/exp/weights/best.pt', source='local')
# Image
img = '/content/test/test11.jpg'
# Inference
results = model(img)
# Results, change the flowing to: results.show()
results.show()  # or .show(), .save(), .crop(), .pandas(), etc